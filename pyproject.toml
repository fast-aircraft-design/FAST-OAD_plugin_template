[tool.poetry]
name = "RENAME_ME"
version = "0.1.0"
description = "This is a plugin for FAST-OAD."
readme = "README.md"
authors = [ ]
packages = [
    { include = "rename_me", from = "src" },
]
exclude = ["**/tests/**"]

homepage = "https://github.com/fast-aircraft-design/FAST-OAD"
keywords = [
    "aircraft",
    "design",
    "multi-disciplinary"
]
license = "GPL-3.0-only"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Natural Language :: English",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering :: Physics"
]

[tool.poetry.dependencies]
# IMPORTANT: when modifying this list, docs/requirements.txt must be updated for
# ReadTheDocs to be able to compile the documentation.
# A pre-commit hook has been added to do this task. As a result, any modification
# of poetry.lock file will modify docs/requirements.txt and make
# the commit fail because "files were modified by this hook". In that case,
# doing again the commit including changes in docs/requirements.txt will succeed.
python = "^3.8.1"
fast-oad-core = "^1.7.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.0"
pytest-cov = "^5.0"
coverage = { extras = ["toml"], version = "*" }
nbval = ">=0.11, <1.0"

[tool.poetry.group.lint.dependencies]
pre-commit = "^3"
ruff = "0.4.4"

[tool.poetry.plugins."fastoad.plugins"]
# Here is registered the FAST-OAD plugin:
# - "plugin_name" can be freely chosen
# - "rename_me" must be the name of an installed package (see "packages" in tool.poetry section)
# For more information, see https://fast-oad.readthedocs.io/en/v1.7.1/documentation/custom_modules/add_plugin.html
"plugin_name" = "rename_me"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100

[tool.pytest.ini_options]
minversion = "7.0"
## Uncomment following line to activate coverage report by default:
# addopts = "--cov-report term-missing --cov-report html --verbose"
testpaths = ["src"]
norecursedirs = ["dist", "build", ".tox", ".ipynb_checkpoints"]
filterwarnings = ["default"]

[tool.coverage.run]
branch = true
omit = ["*/test/*", "*/tests/*"]
[tool.coverage.paths]
source = ["src/", "*/site-packages/"]
[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ = = .__main__.:"
]
